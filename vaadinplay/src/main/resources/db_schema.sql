CREATE TABLE PARTY (CREATED DATETIME NULL, ID INT NOT NULL AUTO_INCREMENT, LAST_MODIFIED DATETIME NULL, NAME VARCHAR(64) NULL, PRIMARY KEY (ID)) ENGINE=InnoDB
;

CREATE TABLE USER (CREATED DATETIME NULL, EMAIL_ADDRESS VARCHAR(128) NULL, FIRST_NAME VARCHAR(48) NULL, ID INT NOT NULL AUTO_INCREMENT, ITEM_FLAGS VARCHAR(32) NULL, LAST_MODIFIED DATETIME NULL, LAST_NAME VARCHAR(48) NULL, PARTY_ID INT NULL, PASSWORD VARCHAR(256) NULL, PRIMARY KEY (ID)) ENGINE=InnoDB
;

CREATE TABLE SONG (CREATED DATETIME NULL, ID INT NOT NULL AUTO_INCREMENT, LAST_MODIFIED DATETIME NULL, NAME VARCHAR(64) NULL, ARTIST_NAME VARCHAR(64) NULL, PRIMARY KEY (ID)) ENGINE=InnoDB
;

CREATE TABLE JOIN_PARTY_SONG (CHILD_ID INT NOT NULL, PARENT_ID INT NOT NULL, PRIMARY KEY (CHILD_ID, PARENT_ID)) ENGINE=InnoDB
;

ALTER TABLE JOIN_PARTY_SONG ADD FOREIGN KEY (PARENT_ID) REFERENCES PARTY (ID)
;

ALTER TABLE JOIN_PARTY_SONG ADD FOREIGN KEY (CHILD_ID) REFERENCES SONG (ID)
;

CREATE TABLE IF NOT EXISTS AUTO_PK_SUPPORT (TABLE_NAME CHAR(100) NOT NULL, NEXT_ID BIGINT NOT NULL, UNIQUE (TABLE_NAME)) ENGINE=InnoDB
;

DELETE FROM AUTO_PK_SUPPORT WHERE TABLE_NAME IN ('PARTY', 'SONG', 'USER')
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('PARTY', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('SONG', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('USER', 200)
;

